<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1"/>
  <title>DXLT Â· DeFi Hub</title>
  <link href="./app.css" rel="stylesheet"/>
  <style>
    /* Page-scoped helpers only (app-wide UI stays in app.css) */
    .defi-wrap{padding:12px;display:grid;gap:14px}
    .defi-hero{position:relative;overflow:hidden;min-height:160px;
      background:radial-gradient(900px 220px at 0% 0%, rgba(34,211,238,.08), transparent 60%), #071322;
      border:1px solid rgba(100,116,255,.20); border-radius:14px; padding:14px}
    .defi-hero h2{margin:0 0 6px 0}
    .defi-hero .muted{color:#94a3b8}
    .defi-controls{display:flex;flex-wrap:wrap;gap:8px;margin-top:10px}
    .seg.on{background:linear-gradient(90deg,#22d3ee,#60a5fa);color:#081426;border:none}

    .section{background:rgba(6,10,18,.8);border:1px solid #2e49ff;border-radius:14px;box-shadow:0 0 24px rgba(64,108,255,.15) inset}
    .section .card-head{padding:12px 14px;border-bottom:1px solid rgba(94,129,255,.25)}
    .grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(230px,1fr));gap:12px;padding:12px}
    .dcard{position:relative;background:#0b1220;border:1px solid #1f2a44;border-radius:14px;padding:12px;display:flex;flex-direction:column;gap:8px}
    .dcard .row{display:flex;align-items:center;gap:10px}
    .dcard .logo{width:28px;height:28px;border-radius:8px;overflow:hidden;display:grid;place-items:center;background:#0f1a2c;box-shadow:inset 0 0 0 1px #26385d}
    .dcard .title{font-weight:700}
    .dcard .muted{color:#9fb0c9;font-size:12px}
    .dcard .tags{display:flex;gap:6px;flex-wrap:wrap}
    .tag{display:inline-flex;gap:6px;align-items:center;background:#0b1220;border:1px solid #1f2a44;border-radius:999px;padding:2px 8px;font-size:12px;color:#9fb0c9}
    .dcard .actions{display:flex;gap:8px;margin-top:auto}
    .btn{height:34px;line-height:34px;border-radius:10px;padding:0 12px}
    .btn.primary{background:linear-gradient(90deg,#22d3ee,#60a5fa);border:0;color:#071321}
    .btn.ghost{background:rgba(11,18,32,.65);border:1px solid #243453}
  </style>
</head>
<body>
<header class="dxtl-header">
  <img class="logo" src="logo.svg" alt="DXLT"/>
  <div class="status"><span class="pulse-dot"></span>Live Terminal</div>
</header>

<div class="app">
  <!-- Sidebar -->
  <aside class="nav-rail">
    <div class="brand">
      <svg aria-hidden="true" class="brand-icon" viewBox="0 0 48 48">
        <defs><linearGradient id="g" x1="0" x2="1" y1="0" y2="1">
          <stop offset="0" stop-color="#60A5FA"/><stop offset="1" stop-color="#22D3EE"/></linearGradient></defs>
        <circle cx="24" cy="24" r="20" fill="url(#g)" opacity=".25"></circle>
        <circle cx="24" cy="24" r="19" fill="none" stroke="url(#g)" stroke-width="2" opacity=".6"></circle>
        <polygon points="21,17 33,24 21,31" fill="url(#g)"></polygon>
      </svg>
      <span class="brand-text">XLT</span>
    </div>

    <!-- TOP NAV (Market Place removed, DeFi added) -->
    <nav class="nav-group">
      <button class="nav-btn" data-route="home"><span class="i">ðŸ </span><span class="t">Home</span></button>
      <button class="nav-btn" data-route="pulse"><span class="i">ðŸ“ˆ</span><span class="t">Pulse</span></button>
      <button class="nav-btn" data-route="dex"><span class="i">ðŸ”„</span><span class="t">Dex</span></button>
      <button class="nav-btn" data-route="wealth"><span class="i">ðŸ’¼</span><span class="t">Wealth</span></button>
      <button class="nav-btn active" data-route="defi"><span class="i">ðŸ¦</span><span class="t">DeFi</span></button>
      <button class="nav-btn" data-route="bots"><span class="i">ðŸ¤–</span><span class="t">Bot Army</span></button>
      <button class="nav-btn" data-route="learn"><span class="i">ðŸŽ“</span><span class="t">Learn Zone</span></button>
    </nav>

    <div class="nav-spacer"></div>
    <nav class="nav-group">
      <button class="nav-btn" data-route="settings"><span class="i">âš™ï¸</span><span class="t">Settings</span></button>
      <button class="nav-btn" data-route="login"><span class="i">ðŸ”’</span><span class="t">User Login</span></button>
      <button class="nav-btn" data-route="mt"><span class="i">ðŸ“Š</span><span class="t">MT4/MT5 Account</span></button>
    </nav>
  </aside>

  <main class="main">
    <!-- Topbar -->
    <div class="topbar">
      <span class="badge left">Live Mode</span>
      <div class="topbar-title">DeFi Hub</div>
      <div class="spacer"></div>
      <div class="wallet" id="wallet-open"><span>ðŸ‘›</span><strong id="wallet-status">Disconnected</strong></div>
    </div>

    <!-- Content -->
    <div class="content defi-wrap">
      <!-- Hero -->
      <section class="defi-hero section">
        <h2>One-click DeFi â€” staking, lending, yield & bridges</h2>
        <div class="muted">Pick a chain, choose a category, jump straight in.</div>
        <div class="defi-controls" id="defiFilters">
          <div class="segrow">
            <button class="seg on" data-chain="all">All Chains</button>
            <button class="seg" data-chain="ethereum">Ethereum</button>
            <button class="seg" data-chain="solana">Solana</button>
            <button class="seg" data-chain="bsc">BSC</button>
            <button class="seg" data-chain="base">Base</button>
            <button class="seg" data-chain="arbitrum">Arbitrum</button>
            <button class="seg" data-chain="optimism">Optimism</button>
            <button class="seg" data-chain="polygon">Polygon</button>
          </div>
          <div class="segrow">
            <button class="seg on" data-cat="all">All</button>
            <button class="seg" data-cat="lending">Lending</button>
            <button class="seg" data-cat="dex">DEX / Agg</button>
            <button class="seg" data-cat="staking">Liquid Staking</button>
            <button class="seg" data-cat="yield">Yield</button>
            <button class="seg" data-cat="bridge">Bridges</button>
            <button class="seg" data-cat="portfolio">Portfolio</button>
          </div>
        </div>
      </section>

      <!-- Sections -->
      <section class="section">
        <header class="card-head"><div class="title">Featured & Blue-chip</div></header>
        <div class="grid" id="defiGrid"></div>
      </section>
    </div>
  </main>
</div>

<footer>DXLT Neon v1.0</footer>

<script>
/* Minimal nav router */
(() => {
  const routes = {
    home:'index.html', pulse:'pulse.html', dex:'dex.html',
    wealth:'wealth.html', defi:'defi.html',
    bots:'bots.html', learn:'learn.html',
    settings:'settings.html', login:'login.html', mt:'mt.html'
  };
  document.querySelectorAll('.nav-btn[data-route]').forEach(btn=>{
    btn.addEventListener('click',()=>{
      const r = btn.getAttribute('data-route');
      if (routes[r]) window.location.href = routes[r];
    });
  });
})();

/* Simple data list (curated) â€” chain + category tags */
(() => {
  const data = [
    // Lending
    { name:'Aave',        url:'https://app.aave.com',        chain:['ethereum','polygon','optimism','arbitrum','base','bsc'], cat:['lending'], blurb:'Top lending markets', logo:'A' },
    { name:'Compound',    url:'https://app.compound.finance',chain:['ethereum'], cat:['lending'], blurb:'Lending protocol', logo:'C' },
    { name:'Benqi',       url:'https://app.benqi.fi/earn',   chain:['avalanche'], cat:['lending'], blurb:'Lending on AVAX', logo:'B' },

    // DEX / Aggregators
    { name:'Uniswap',     url:'https://app.uniswap.org',     chain:['ethereum','polygon','optimism','arbitrum','base'], cat:['dex'], blurb:'AMM / swaps', logo:'U' },
    { name:'Sushi',       url:'https://www.sushi.com',       chain:['ethereum','arbitrum','polygon','bsc','base'], cat:['dex'], blurb:'Multi-chain DEX', logo:'S' },
    { name:'Jupiter',     url:'https://jup.ag',              chain:['solana'], cat:['dex'], blurb:'Solana aggregator', logo:'J' },
    { name:'1inch',       url:'https://app.1inch.io',        chain:['ethereum','bsc','polygon','optimism','arbitrum','base'], cat:['dex'], blurb:'DEX aggregator', logo:'1' },
    { name:'PancakeSwap', url:'https://pancakeswap.finance', chain:['bsc','eth'], cat:['dex'], blurb:'BSC/ETH DEX', logo:'P' },
    { name:'QuickSwap',   url:'https://quickswap.exchange',  chain:['polygon'], cat:['dex'], blurb:'Polygon DEX', logo:'Q' },

    // Liquid Staking
    { name:'Lido',        url:'https://stake.lido.fi',       chain:['ethereum','polygon','solana'], cat:['staking'], blurb:'stETH & more', logo:'L' },
    { name:'Rocket Pool', url:'https://rocketpool.net',      chain:['ethereum'], cat:['staking'], blurb:'Decentralized staking', logo:'R' },
    { name:'Marinade',    url:'https://marinade.finance',    chain:['solana'], cat:['staking'], blurb:'mSOL staking', logo:'M' },

    // Yield / Vaults
    { name:'Yearn',       url:'https://yearn.finance',       chain:['ethereum'], cat:['yield'], blurb:'Vault strategies', logo:'Y' },
    { name:'Beefy',       url:'https://app.beefy.finance',   chain:['bsc','polygon','avalanche','optimism','arbitrum','base','ethereum'], cat:['yield'], blurb:'Yield optimizer', logo:'Bf' },

    // Bridges
    { name:'Across',      url:'https://across.to',           chain:['ethereum','arbitrum','optimism','base','polygon','bsc'], cat:['bridge'], blurb:'Fast L2 bridge', logo:'A' },
    { name:'Wormhole',    url:'https://www.portalbridge.com',chain:['solana','ethereum','bsc','polygon','base','arbitrum','optimism'], cat:['bridge'], blurb:'Cross-chain bridge', logo:'W' },

    // Portfolio / Tools
    { name:'Zapper',      url:'https://zapper.xyz',          chain:['ethereum','polygon','bsc','avalanche','fantom','optimism','arbitrum','base'], cat:['portfolio'], blurb:'Portfolio & explore', logo:'Z' },
    { name:'DeBank',      url:'https://debank.com',          chain:['ethereum','bsc','polygon','arbitrum','optimism','base'], cat:['portfolio'], blurb:'Portfolio & social', logo:'D' },
  ];

  const grid = document.getElementById('defiGrid');
  const filtWrap = document.getElementById('defiFilters');
  const state = { chain:'all', cat:'all' };

  function pass(d){
    const chainOk = state.chain==='all' || (d.chain||[]).includes(state.chain);
    const catOk   = state.cat==='all'   || (d.cat||[]).includes(state.cat);
    return chainOk && catOk;
  }

  function render(){
    const list = data.filter(pass);
    if (!list.length){
      grid.innerHTML = `<div class="placeholder" style="margin:12px">No matches for this filter.</div>`;
      return;
    }
    grid.innerHTML = list.map(d => `
      <div class="dcard" data-chain="${(d.chain||[]).join(',')}" data-cat="${(d.cat||[]).join(',')}">
        <div class="row">
          <div class="logo">${d.logo||'â€¢'}</div>
          <div>
            <div class="title">${d.name}</div>
            <div class="muted">${d.blurb||''}</div>
          </div>
        </div>
        <div class="tags">
          ${(d.chain||[]).slice(0,6).map(c=>`<span class="tag">${c}</span>`).join('')}
          ${(d.cat||[]).map(c=>`<span class="tag">${c}</span>`).join('')}
        </div>
        <div class="actions">
          <a class="btn primary" target="_blank" rel="noopener noreferrer" href="${d.url}">Open</a>
          <a class="btn ghost" target="_blank" rel="noopener noreferrer" href="${d.url}">Learn</a>
        </div>
      </div>
    `).join('');
  }

  filtWrap.addEventListener('click', e=>{
    const b = e.target.closest('button.seg'); if(!b) return;
    const chain = b.getAttribute('data-chain');
    const cat = b.getAttribute('data-cat');

    // toggle groups
    if (chain) {
      filtWrap.querySelectorAll('button.seg[data-chain]').forEach(x=>x.classList.toggle('on', x===b));
      state.chain = chain;
    }
    if (cat) {
      filtWrap.querySelectorAll('button.seg[data-cat]').forEach(x=>x.classList.toggle('on', x===b));
      state.cat = cat;
    }
    render();
  });

  render();
})();
</script>
<script>
(() => {
  const routes = {
    home:'index.html',
    pulse:'pulse.html',
    dex:'dex.html',
    wealth:'wealth.html',
    defi:'defi.html',    // ✅ added / replacing Market Place
    bots:'bots.html',
    learn:'learn.html',
    settings:'settings.html',
    login:'login.html',
    mt:'mt.html'
  };
  document.querySelectorAll('.nav-btn[data-route]').forEach(btn => {
    btn.addEventListener('click', () => {
      const r = btn.getAttribute('data-route');
      if (routes[r]) window.location.href = routes[r];
    });
  });
})();
</script>
<script>
(() => {
  const routes = {
    home:'index.html',
    pulse:'pulse.html',
    dex:'dex.html',
    wealth:'wealth.html',
    defi:'defi.html',    // ✅ DeFi added, Market Place removed
    bots:'bots.html',
    learn:'learn.html',
    settings:'settings.html',
    login:'login.html',
    mt:'mt.html'
  };
  document.querySelectorAll('.nav-btn[data-route]').forEach(btn => {
    btn.addEventListener('click', () => {
      const r = btn.getAttribute('data-route');
      if (routes[r]) window.location.href = routes[r];
    });
  });
})();
</script>
</body>
</html>



